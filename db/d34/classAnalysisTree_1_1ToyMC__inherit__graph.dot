digraph "AnalysisTree::ToyMC&lt; RandomEngine &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{AnalysisTree::ToyMC\l\< RandomEngine \>\n|# generator_\l# sim_event_header_\l# multiplicity_\l# psi_RP_\l# vn_\l# cm_rapidity_\l# particles_\l# pT_dist_\l# y_dist_\l# phi_distr_\l# track_detector_\l# rec_tracks_to_sim_\l# efficiency_map_\l|+ ToyMC()\l+ ~ToyMC()\l+ Init()\l+ Exec()\l+ Finish()\l+ FillEventInfo()\l+ FillMcParticles()\l+ FillRecoTracks()\l# GetPhi()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{AnalysisTree::Task\n|# config_\l# data_header_\l# event_cuts_\l# in_branches_\l# is_init_\l|+ Task()\l+ ~Task()\l+ Init()\l+ Exec()\l+ Finish()\l+ PreInit()\l+ SetInConfiguration()\l+ SetDataHeader()\l+ SetInputBranchNames()\l+ GetInputBranchNames()\l+ IsGoodEvent()\l# ClassDef()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/dcf/classAnalysisTree_1_1Task.html"];
}
