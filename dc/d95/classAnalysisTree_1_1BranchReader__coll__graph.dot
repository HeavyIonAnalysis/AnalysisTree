digraph "AnalysisTree::BranchReader"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{AnalysisTree::BranchReader\n|# name_\l# data_\l# id_\l# type_\l|+ BranchReader()\l+ BranchReader()\l+ ~BranchReader()\l+ GetName()\l+ GetType()\l+ GetCut()\l+ GetValue()\l+ GetNumberOfChannels()\l+ ApplyCut()\l+ GetData()\l+ GetId()\l# ClassDef()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #cuts_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{AnalysisTree::Cuts\n|# name_\l# branch_names_\l# branch_ids_\l# cuts_\l# is_init_\l|+ Cuts()\l+ Cuts()\l+ Cuts()\l+ operator=()\l+ operator=()\l+ ~Cuts()\l+ Cuts()\l+ Cuts()\l+ Apply()\l+ Apply()\land 7 more...\l+ Equal()\l# ClassDef()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dce/classAnalysisTree_1_1Cuts.html",tooltip="Cuts holds list of SimpleCuts and provides Apply function which subsequently applies cuts..."];
}
