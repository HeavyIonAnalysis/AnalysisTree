digraph "AnalysisTree::PlainTreeFiller"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{AnalysisTree::PlainTreeFiller\n|# plain_tree_\l# tree_name_\l# branch_name_\l# vars_\l|+ PlainTreeFiller()\l+ AddBranch()\l+ Init()\l+ Exec()\l+ Finish()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{AnalysisTree::AnalysisTask\n|# entries_\l# branches_\l# cuts_map_\l|+ AnalysisTask()\l+ ~AnalysisTask()\l+ AddEntry()\l+ Init()\l+ Exec()\l+ Finish()\l+ GetValues()\l+ GetBranches()\l+ Branches()\l+ GetBranch()\l+ GetVarEntries()\l+ VarEntries()\l# ClassDefOverride()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d40/classAnalysisTree_1_1AnalysisTask.html",tooltip="AnalysisTask is a Task which keeps list of AnalysisEntry-s It evaluates Variables according to the ru..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{AnalysisTree::Task\n|# in_branches_\l# is_init_\l|+ Task()\l+ ~Task()\l+ Init()\l+ Exec()\l+ Finish()\l+ PreInit()\l+ SetInConfiguration()\l+ SetDataHeader()\l+ SetInputBranchNames()\l+ GetInputBranchNames()\l+ IsGoodEvent()\l# ClassDef()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/dcf/classAnalysisTree_1_1Task.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #config_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{AnalysisTree::Configuration\n|# name_\l# branches_\l# matches_\l|+ Configuration()\l+ Configuration()\l+ Configuration()\l+ Configuration()\l+ operator=()\l+ operator=()\l+ AddBranchConfig()\l+ AddMatch()\l+ GetBranchConfig()\l+ GetBranchConfig()\land 8 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/dee/classAnalysisTree_1_1Configuration.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{TObject\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #data_header_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{AnalysisTree::DataHeader\n|# modules_pos_\l# det_pos_\l# system_\l# beam_mom_\l# beam_y_\l# sqrtsNN_\l|+ DataHeader()\l+ DataHeader()\l+ DataHeader()\l+ operator=()\l+ operator=()\l+ AddDetector()\l+ Print()\l+ SetSystem()\l+ SetBeamMomentum()\l+ SetDetectorPosition()\l+ GetBeamRapidity()\l+ GetSystem()\l+ GetDetectorPosition()\l+ GetModulePositions()\l+ GetModulePhi()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d77/classAnalysisTree_1_1DataHeader.html"];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #event_cuts_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{AnalysisTree::Cuts\n|# name_\l# branch_names_\l# branch_ids_\l# cuts_\l# is_init_\l|+ Cuts()\l+ Cuts()\l+ Cuts()\l+ operator=()\l+ operator=()\l+ ~Cuts()\l+ Cuts()\l+ Cuts()\l+ Apply()\l+ Apply()\land 7 more...\l+ Equal()\l# ClassDef()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dce/classAnalysisTree_1_1Cuts.html",tooltip="Cuts holds list of SimpleCuts and provides Apply function which subsequently applies cuts..."];
}
